#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I${HOME}/local/include
CFLAGS = -std=c++11
RESINC = 
LIBDIR = -L${HOME}/local/lib
LIB = ../alphautils/libalphautils.a -lopencv_stitching -lopencv_videostab -lopencv_gpu -lopencv_legacy -lopencv_ts -lopencv_nonfree -lopencv_contrib -lopencv_calib3d -lopencv_objdetect -lopencv_features2d -lopencv_video -lopencv_photo -lopencv_highgui -lopencv_flann -lopencv_imgproc -lopencv_ml -lopencv_core -lx264 -lfaac -lgomp
LDFLAGS = `pkg-config opencv --libs` -lgomp -lrt -lpthread -ldl

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -Wall -g -fopenmp `pkg-config opencv --cflags`
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = ./libsifthesaff.a

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -march=corei7 -O3 -Wall -fopenmp `pkg-config opencv --cflags`
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = ./libsifthesaff.a

OBJ_DEBUG = $(OBJDIR_DEBUG)/AffineHessianDetector.o $(OBJDIR_DEBUG)/SIFThesaff.o $(OBJDIR_DEBUG)/affine.o $(OBJDIR_DEBUG)/helpers.o $(OBJDIR_DEBUG)/pyramid.o $(OBJDIR_DEBUG)/siftdesc.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/AffineHessianDetector.o $(OBJDIR_RELEASE)/SIFThesaff.o $(OBJDIR_RELEASE)/affine.o $(OBJDIR_RELEASE)/helpers.o $(OBJDIR_RELEASE)/pyramid.o $(OBJDIR_RELEASE)/siftdesc.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d . || mkdir -p .
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)

$(OBJDIR_DEBUG)/AffineHessianDetector.o: AffineHessianDetector.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c AffineHessianDetector.cpp -o $(OBJDIR_DEBUG)/AffineHessianDetector.o

$(OBJDIR_DEBUG)/SIFThesaff.o: SIFThesaff.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c SIFThesaff.cpp -o $(OBJDIR_DEBUG)/SIFThesaff.o

$(OBJDIR_DEBUG)/affine.o: affine.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c affine.cpp -o $(OBJDIR_DEBUG)/affine.o

$(OBJDIR_DEBUG)/helpers.o: helpers.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c helpers.cpp -o $(OBJDIR_DEBUG)/helpers.o

$(OBJDIR_DEBUG)/pyramid.o: pyramid.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c pyramid.cpp -o $(OBJDIR_DEBUG)/pyramid.o

$(OBJDIR_DEBUG)/siftdesc.o: siftdesc.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c siftdesc.cpp -o $(OBJDIR_DEBUG)/siftdesc.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	#rm -rf .
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d . || mkdir -p .
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/AffineHessianDetector.o: AffineHessianDetector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c AffineHessianDetector.cpp -o $(OBJDIR_RELEASE)/AffineHessianDetector.o

$(OBJDIR_RELEASE)/SIFThesaff.o: SIFThesaff.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c SIFThesaff.cpp -o $(OBJDIR_RELEASE)/SIFThesaff.o

$(OBJDIR_RELEASE)/affine.o: affine.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c affine.cpp -o $(OBJDIR_RELEASE)/affine.o

$(OBJDIR_RELEASE)/helpers.o: helpers.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c helpers.cpp -o $(OBJDIR_RELEASE)/helpers.o

$(OBJDIR_RELEASE)/pyramid.o: pyramid.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c pyramid.cpp -o $(OBJDIR_RELEASE)/pyramid.o

$(OBJDIR_RELEASE)/siftdesc.o: siftdesc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c siftdesc.cpp -o $(OBJDIR_RELEASE)/siftdesc.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	#rm -rf .
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

